[bumpversion]
current_version = 0.23.1
commit = False
tag = False

[bumpversion:file:src/nitpick/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:pyproject.toml]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:package.json]
search = "version": "{current_version}",
replace = "version": "{new_version}",

[bumpversion:file:docs/conf.py]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:docs/targets.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:docs/quickstart.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:docs/tool_nitpick_section.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:nitpick-style.toml]
search = {current_version}
replace = {new_version}

[bumpversion:file:README.md]
search = {current_version}
replace = {new_version}

[flake8]
ignore = D107,D401,D202,D203,E203,E402,E501,W503
max-line-length = 120
exclude = docs,.tox,build
max-complexity = 10
inline-quotes = double

# https://github.com/asottile/flake8-typing-imports#configuration
min_python_version = 3.6.0

[isort]
; https://pycqa.github.io/isort/docs/configuration/options/
line_length = 120
skip = docs,.tox,build
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True
extra_standard_library = dataclasses
known_first_party = tests,nitpick

[mypy]
ignore_missing_imports = True
follow_imports = skip
strict_optional = True
warn_no_return = True
warn_redundant_casts = True
warn_unused_ignores = True

[tool:pytest]
addopts = -v
norecursedirs = .* build dist CVS _darcs {arch} *.egg venv var docs
# https://docs.pytest.org/en/stable/reference.html#confval-testpaths
testpaths = src tests

[tox:tox]
; https://tox.readthedocs.io/en/latest/config.html
isolated_build = True
envlist = clean,lint,py39,py38,py37,py36,docs,report

[gh-actions]
; https://github.com/ymyzk/tox-gh-actions
python =
    3.9: py39
    3.8: py38, clean, lint, docs, report
    3.7: py37
    3.6: py36

[testenv]
description = Run tests with pytest and coverage
deps = pytest-cov
extras = test
depends =
    {py39,py38,py37,py36}: clean
    report: py39,py38,py37,py36
setenv =
    PY_IGNORE_IMPORTMISMATCH = 1
commands =
    python -m pip --version
    python -m pytest --cov-config=setup.cfg --cov --cov-append --cov-report=term-missing --doctest-modules {posargs:-vv}

[testenv:clean]
description = Erase data for the coverage report before running tests
platform = linux|darwin
skip_install = true
deps = coverage
commands = coverage erase

[testenv:lint]
description = Lint all files with pre-commit
basepython = python3.8
platform = linux|darwin
; pylint needs both these extras:
; lint: install pylint itself
; test: for pylint to inspect tests
extras =
    lint
    test
deps =
    pip>=19.2
    safety
# Run nitpick and pylint with tox, because local repos don't seem to work well with https://pre-commit.ci/
# Run Nitpick locally on itself
commands =
    flake8 --select=NIP
    pylint src/
    safety check

[testenv:report]
description = Coverage report
platform = linux|darwin
skip_install = true
deps = coverage
commands =
    coverage report
    coverage html

[testenv:docs]
description = Build the HTML docs using Sphinx (sphinx-build, API docs, link checks)
basepython = python3.8
platform = linux|darwin
extras = doc
# Options to debug Sphinx: -nWT --keep-going -vvv
commands =
    sphinx-apidoc --force --module-first --separate --implicit-namespaces --output-dir docs/source src/nitpick/
    python3 docs/generate_rst.py
    sphinx-build --color -b linkcheck docs "{toxworkdir}/docs_out"
    sphinx-build -d "{toxworkdir}/docs_doctree" --color -b html docs "{toxworkdir}/docs_out" {posargs}

[coverage:run]
; https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
parallel = true
omit =
    tests/*
    .tox/*
; This config is needed by https://github.com/marketplace/actions/coveralls-python#usage
relative_files = True

[coverage:paths]
; https://coverage.readthedocs.io/en/latest/config.html#paths
source = src/

[coverage:report]
; https://coverage.readthedocs.io/en/latest/config.html#report
show_missing = true
precision = 2
skip_covered = true
skip_empty = true
sort = Cover

; https://coverage.readthedocs.io/en/latest/excluding.html#advanced-exclusion
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    if TYPE_CHECKING:
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:

[bandit]
exclude = tests/*
