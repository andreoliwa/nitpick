[bumpversion]
current_version = 0.22.2
commit = False
tag = False

[bumpversion:file:src/nitpick/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:pyproject.toml]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:package.json]
search = "version": "{current_version}",
replace = "version": "{new_version}",

[bumpversion:file:docs/conf.py]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:docs/targets.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:docs/installation_guide.rst]
search = {current_version}
replace = {new_version}

[bumpversion:file:nitpick-style.toml]
search = {current_version}
replace = {new_version}

[bumpversion:file:README.md]
search = {current_version}
replace = {new_version}

[flake8]
ignore = D107,D401,D202,D203,E203,E402,E501,W503
max-line-length = 120
exclude = docs,.tox,build
max-complexity = 10
inline-quotes = double

[isort]
line_length = 120
skip = docs,.tox,build
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True
known_first_party = tests,nitpick
known_third_party = _pytest,attr,click,dictdiffer,flake8,identify,jmespath,marshmallow,marshmallow_polyfield,more_itertools,pluggy,pytest,requests,responses,ruamel,slugify,sortedcontainers,testfixtures,toml

[mypy]
ignore_missing_imports = True
follow_imports = skip
strict_optional = True
warn_no_return = True
warn_redundant_casts = True
warn_unused_ignores = True

[tool:pytest]
addopts = -v
norecursedirs = .* build dist CVS _darcs {arch} *.egg venv var docs

[tox:tox]
# https://tox.readthedocs.io/en/latest/example/package.html#poetry
isolated_build = True

# https://tox.readthedocs.io/en/latest/plugins.html
# https://tox.readthedocs.io/en/latest/config.html#conf-requires
# https://tox.readthedocs.io/en/latest/example/basic.html#tox-auto-provisioning
requires =
    tox-travis
    tox-venv
    tox-pyenv

envlist = clean,lint,py39,py38,py37,py36,py35,report

[testenv]
description = Run tests with pytest and coverage
deps =
    # Minimum versions To avoid errors like:
    # Direct url requirement (like toml@ git+https://github.com/uiri/toml.git@9be6458) are not allowed for dependencies
    # This version of pip does not implement PEP 517 so it cannot build a wheel without 'setuptools' and 'wheel'.
    pip >= 20.1.1
    setuptools
    wheel

    pytest-cov

    # TODO: Force install from Git, otherwise version 0.10.1 is installed
    # This version still raises "ValueError: Circular reference", see https://github.com/andreoliwa/nitpick/issues/160
    # The commit with the fix was not released yet: https://github.com/uiri/toml/commit/9be64582fff86b9c5bd94ce52a5fedcb3d4fac01
    git+https://github.com/uiri/toml.git@9be64582fff86b9c5bd94ce52a5fedcb3d4fac01
extras = test
depends =
    {py39,py38,py37,py36,py35}: clean
    report: py39,py38,py37,py36,py35
setenv =
    # I had this error locally, but it worked on Travis CI: https://github.com/pytest-dev/pytest/issues/2042
    PY_IGNORE_IMPORTMISMATCH = 1
commands =
    python -m pip --version
    # https://pytest-cov.readthedocs.io/en/latest/config.html
	python -m pytest --cov-config=setup.cfg --cov --cov-append --cov-report=term-missing --doctest-modules {posargs:-vv}

# https://pytest-cov.readthedocs.io/en/latest/tox.html
[testenv:clean]
description = Erase data for the coverage report before running tests
skip_install = true
deps = coverage
commands = coverage erase

# https://tox.readthedocs.io/en/latest/config.html
[testenv:lint]
description = Lint all files with pre-commit
basepython = python3.7
platform = linux|darwin
# These packages are needed for the pylint hook to check the code under tests/*.
extras =
    lint
    test
deps =
    # Minimum versions To avoid errors like:
    # Direct url requirement (like toml@ git+https://github.com/uiri/toml.git@9be6458) are not allowed for dependencies
    # This version of pip does not implement PEP 517 so it cannot build a wheel without 'setuptools' and 'wheel'.
    pip >= 20.1.1
    setuptools
    wheel

    pre-commit
    safety

    # TODO: Force install from Git, otherwise version 0.10.1 is installed
    # This version still raises "ValueError: Circular reference", see https://github.com/andreoliwa/nitpick/issues/160
    # The commit with the fix was not released yet: https://github.com/uiri/toml/commit/9be64582fff86b9c5bd94ce52a5fedcb3d4fac01
    git+https://github.com/uiri/toml.git@9be64582fff86b9c5bd94ce52a5fedcb3d4fac01
commands =
    pre-commit run --all-files
    safety check

[testenv:report]
description = Coverage report
skip_install = true
deps = coverage
commands =
    coverage report
    coverage html

[coverage:run]
# https://coverage.readthedocs.io/en/coverage-5.1/config.html#run
branch = true
parallel = true
omit =
    tests/*
    .tox/*
    /home/travis/virtualenv/*

[coverage:paths]
# https://coverage.readthedocs.io/en/coverage-5.1/config.html#paths
source = src/

[coverage:report]
# https://coverage.readthedocs.io/en/coverage-5.1/config.html#report
show_missing = true
precision = 2
skip_covered = true
skip_empty = true
sort = Cover

[testenv:docs]
description = Build the HTML docs using Sphinx (sphinx-build, API docs, link checks)
basepython = python3.7
extras = doc
commands =
    sphinx-apidoc --force --module-first --separate --implicit-namespaces --output-dir docs/source src/nitpick/
    python3 docs/generate_rst.py

    # Detect broken links on the documentation
    sphinx-build --color -b linkcheck docs "{toxworkdir}/docs_out"

    sphinx-build -d "{toxworkdir}/docs_doctree" --color -b html docs "{toxworkdir}/docs_out" {posargs}

[bandit]
exclude = tests/*
