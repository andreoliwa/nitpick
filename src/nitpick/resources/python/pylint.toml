[nitpick.meta]
name = "Pylint"
url = "https://github.com/PyCQA/pylint"

["pyproject.toml".tool.poetry.dependencies]
pylint = {version = "*", optional = true}

["pyproject.toml".tool.poetry.extras]
lint = ["pylint"]

# pylint needs to be installed in the same venv as the project, to be more useful
# https://github.com/pre-commit/mirrors-pylint#using-pylint-with-pre-commit
[[".pre-commit-config.yaml".repos]]
repo = "local"

[[".pre-commit-config.yaml".repos.hooks]]
id = "pylint"
name = "pylint"
language = "system"
exclude = "tests/"
types = ["python"]

[".pylintrc".MASTER]
# Use multiple processes to speed up Pylint.
jobs = 1

# https://github.com/samuelcolvin/pydantic/issues/1961#issuecomment-759522422
extension-pkg-whitelist = "pydantic"

[".pylintrc".REPORTS]
# Set the output format. Available formats are text, parseable, colorized, msvs (visual studio) and html.
# You can also give a reporter class, eg mypackage.mymodule.MyReporterClass.
output-format = "colorized"

[".pylintrc"."MESSAGES CONTROL"]
# TODO: fix: deal with character separated INI options in https://github.com/andreoliwa/nitpick/issues/271
#  The "nitpick.files" section doesn't work out of the box for .pylintrc:
#  [nitpick.files.".pylintrc"]
#  comma_separated_values = ["MESSAGES CONTROL.disable"]
#  This syntax will be deprecated anyway, so I won't make it work now
# Configurations for the black formatter
#disable = "bad-continuation,bad-whitespace,fixme,cyclic-import,line-too-long"

[".pylintrc".BASIC]
# List of builtins function names that should not be used, separated by a comma
bad-functions = "map,filter"
# Good variable names which should always be accepted, separated by a comma
good-names = "i,j,k,e,ex,Run,_,id,rv,c"

[".pylintrc".FORMAT]
# Maximum number of characters on a single line.
max-line-length = 120
# Maximum number of lines in a module
max-module-lines = 1000
# TODO: fix: deal with empty options (strings with spaces and quotes); maybe it's a ConfigParser/ConfigUpdater thing
# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1 tab).
#indent-string = "    "
# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren = 4

[".pylintrc".SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines = 4
# Ignore comments when computing similarities.
ignore-comments = "yes"
# Ignore docstrings when computing similarities.
ignore-docstrings = "yes"
# Ignore imports when computing similarities.
ignore-imports = "no"

[".pylintrc".VARIABLES]
# A regular expression matching the name of dummy variables (i.e. expectedly not used).
dummy-variables-rgx = "_$|dummy"

[".codeclimate.yml".plugins.pylint]  # https://docs.codeclimate.com/docs/pylint Already checked by pre-commit
enabled = false
