# Default style file for flake8-nitpick
# https://raw.githubusercontent.com/andreoliwa/flake8-nitpick/master/nitpick-style.toml

[[files.absent]]
file = "requirements.txt"
message = "Use 'poetry init' to create pyproject.toml and move dependencies to it"

[[files.absent]]
file = ".isort.cfg"
message = "Move values to setup.cfg, section [isort]"

[[files.absent]]
file = "Pipfile"
message = "Use pyproject.toml instead"

[[files.absent]]
file = "Pipfile.lock"
message = "Use pyproject.toml instead"

[[files.absent]]
file = ".venv"

["pyproject.toml".tool.black]
line-length = 120

["pyproject.toml".tool.poetry.dev-dependencies]
black = {version = "*", allows-prereleases = true}
flake8-blind-except = "*"
flake8-bugbear = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-docstrings = "*"
flake8-isort = "*"
# TODO Go back to * when https://github.com/ambv/flake8-mypy/issues/21 is merged, or on a new release
flake8-mypy = {git = "https://github.com/ambv/flake8-mypy"}
flake8-polyfill = "*"
flake8-pytest = "*"
flake8-quotes = "*"

# TODO pre_commit = "*" raises [TooManyRedirects] Exceeded 30 redirects. on poetry 0.12.10
pre-commit = {git = "https://github.com/pre-commit/pre-commit"}

ipython = "*"
ipdb = "*"
pylint = "*"
mypy = "*"

["setup.cfg".flake8]
# http://www.pydocstyle.org/en/2.1.1/error_codes.html
# Ignoring W503: https://github.com/ambv/black#line-breaks--binary-operators
# Ignoring "D202 No blank lines allowed after function docstring": black inserts a blank line.
ignore = "D107,D202,D203,D401,E203,E402,E501,W503"
max-line-length = 120
inline-quotes = "double"

["setup.cfg".isort]
line_length = 120

# The configuration below is needed for compatibility with black.
# https://github.com/ambv/black#how-black-wraps-lines
# https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

# https://mypy.readthedocs.io/en/latest/config_file.html
["setup.cfg".mypy]
ignore_missing_imports = true

# Do not follow imports (except for ones found in typeshed)
follow_imports = "skip"

# Treat Optional per PEP 484
strict_optional = true

# Ensure all execution paths are returning
warn_no_return = true

# Lint-style cleanliness for typing
warn_redundant_casts = true
warn_unused_ignores = true

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
[["pre-commit-config.yaml".repos]]
repo = "local"
hooks = """
- id: isort
  name: isort
  entry: isort -sp setup.cfg
  language: system
  language_version: python
  types: [python]

- id: black
  name: black
  entry: black
  language: system
  language_version: python
  types: [python]

- id: mypy
  name: mypy
  # For now this should always ignore the exit code and I could not find a way to ignore if a hook fail on the docs
  entry: python -c 'import sys; import subprocess;
    subprocess.run(["mypy", "--ignore-missing-imports"] + sys.argv[1:])'
  language: system
  language_version: python
  verbose: True
  types: [python]

- id: pylint
  name: pylint
  entry: pylint --rcfile=.pylintrc --reports=n --disable=locally-disabled
  language: system
  language_version: python
  types: [python]

- id: flake8
  name: flake8
  entry: flake8
  language: system
  language_version: python
  types: [python]
"""
