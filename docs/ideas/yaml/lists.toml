# List behaviours that are still not implemented in YAML (maybe they can be used in other formats too)

# FIXME: this should be the default behaviour for lists of scalars; it's less destructive
# 1. List behaviour: Compare elements (dict: by key or hash, scalar: by value). Change existing and add missing.
# On a list of scalars, add missing elements to the list
# Only check if the element is present but don't enforce the whole list to be the same
[".pre-commit-config.yaml".ci]
skip = ["pylint"]

# 2. List behaviour: Replace whole list (dict or scalar)
# In a list of scalars, the whole list should be exactly as in the style

# 3. List behaviour: [DUPLICATED] Search by hash
#  In a list of dicts, search lists by a hash of the dict object.
#  Hash each dict of the actual list (all key/value pairs).
#  Then loop through the new elements and only add those who were not found with the same hash.
["some-file.yaml".__search_object_hash]
# Hash all fields
some_list = "*"
# Hash only specific fields
person_list = "name,age,gender"
# Hash all fields except these
another_list = "-price,size"

# 4. List behaviour: Custom function (dict or scalar)
# Search using a custom function.
# A custom function called by Nitpick that receives X, Y, Z arguments (to be defined)
# And returns the new element and its index it should be in the list:
# - 0 to len(list)
# - or -1 to append the element at the end
["another-file.yaml".__search_custom]
my_fancy_list = "path.to.module.and.function"
