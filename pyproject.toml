[tool.nitpick]
# Use the default style and override some things (like the Python version)
style = ["nitpick-style", "styles/python35-36-37-38"]

[tool.black]
line-length = 120

[tool.poetry]
name = "nitpick"
version = "0.23.0"
description = "Flake8 plugin to enforce the same lint configuration (flake8, isort, mypy, pylint) across multiple Python projects"
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/andreoliwa/nitpick"
keywords = ["python3", "flake8", "linter", "styleguide"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.plugins."flake8.extension"]
NIP = "nitpick.flake8:NitpickExtension"

[tool.poetry.plugins.nitpick]
text = "nitpick.plugins.text"
json = "nitpick.plugins.json"
pre_commit = "nitpick.plugins.pre_commit"
setup_cfg = "nitpick.plugins.setup_cfg"
pyproject_toml = "nitpick.plugins.pyproject_toml"

[tool.poetry.dependencies]
python = "^3.5 || ^3.6 || ^3.7 || ^3.8"
flake8 = ">=3.0.0"
attrs = "*"
# TODO: Version 0.10.1 still raises "ValueError: Circular reference", see https://github.com/andreoliwa/nitpick/issues/160
#  The commit with the fix was not released yet: https://github.com/uiri/toml/commit/9be64582fff86b9c5bd94ce52a5fedcb3d4fac01
toml = "<0.10.2"
requests = "*"
dictdiffer = "*"
"ruamel.yaml" = "*"
python-slugify = "*"
jmespath = "*"
sortedcontainers = "*"
click = "*"
# Pin marshmallow to avoid error on "pip install -U nitpick":
# marshmallow-polyfield 5.7 has requirement marshmallow>=3.0.0b10, but you'll have marshmallow 2.19.5 which is incompatible.
marshmallow = {version = ">=3.0.0b10"}
# Pin to avoid error on "flake8 ." when there is an invalid TOML style:
# TypeError: _deserialize() got an unexpected keyword argument 'partial'
marshmallow-polyfield = "^5.7"
identify = "*"
"more-itertools" = "*"
pluggy = "*"

pylint = {version = "*", optional = true}
pytest = {version = "*", optional = true}
testfixtures = {version = "*", optional = true}
responses = {version = "*", optional = true}
sphinx = {version = "*", optional = true}
sphinx_rtd_theme = {version = "*", optional = true}

[tool.poetry.extras]
lint = ["pylint"]
test = ["pytest", "testfixtures", "responses"]
doc = ["sphinx", "sphinx_rtd_theme"]

[tool.poetry.dev-dependencies]
ipython = "*"
ipdb = "*"
icecream = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
