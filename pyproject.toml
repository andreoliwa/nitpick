[tool.nitpick]
# Use the default style and override some things (like the Python version)
style = ["nitpick-style", "styles/python36"]

[tool.black]
line-length = 120

[tool.poetry]
name = "nitpick"
version = "0.29.0"
description = "Enforce the same settings across multiple language-independent projects"
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/andreoliwa/nitpick"
keywords = ["python3", "flake8", "linter", "styleguide"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.urls]
"Documentation" = "https://nitpick.rtfd.io/"
"Changelog" = "https://github.com/andreoliwa/nitpick/blob/develop/CHANGELOG.md"
"Issue Tracker" = "https://github.com/andreoliwa/nitpick/issues"

[tool.poetry.scripts]
nitpick = "nitpick.cli:nitpick_cli"

[tool.poetry.plugins."flake8.extension"]
NIP = "nitpick.flake8:NitpickFlake8Extension"

[tool.poetry.plugins.nitpick]
text = "nitpick.plugins.text"
json = "nitpick.plugins.json"
pre_commit = "nitpick.plugins.pre_commit"
ini = "nitpick.plugins.ini"
toml = "nitpick.plugins.toml"

[tool.poetry.dependencies]
python = "^3.6"
flake8 = ">=3.0.0"
attrs = "*"
tomlkit = "*"
toml = "*" # TODO: keep only tomlkit if possible, to have only one package to handle TOML
requests = "*"
dictdiffer = "*"
"ruamel.yaml" = "*"
python-slugify = "*"
jmespath = "*"
sortedcontainers = "*"
click = "*"
# Pin marshmallow to avoid error on "pip install -U nitpick":
# marshmallow-polyfield 5.7 has requirement marshmallow>=3.0.0b10, but you'll have marshmallow 2.19.5 which is incompatible.
marshmallow = { version = ">=3.0.0b10" }
# Pin to avoid error on "flake8 ." when there is an invalid TOML style:
# TypeError: _deserialize() got an unexpected keyword argument 'partial'
marshmallow-polyfield = "^5.10"
identify = "*"
"more-itertools" = "*"
pluggy = "*"
pylint = { version = "*", optional = true }
pytest = { version = "*", optional = true }
pytest-cov = { version = "*", optional = true }
testfixtures = { version = "*", optional = true }
freezegun = { version = "*", optional = true }
responses = { version = "*", optional = true }
pytest-testmon = { version = "*", optional = true }
pytest-watch = { version = "*", optional = true }
pytest-socket = { version = "*", optional = true }
sphinx = { version = "*", optional = true }
sphinx_rtd_theme = { version = "*", optional = true }
sphobjinv = { version = "*", optional = true }
pydantic = "*"
autorepr = "*"
loguru = "*"
ConfigUpdater = "*"
cachy = "*"
importlib-resources = { version = "*", python = ">=3.6, <3.9" }

[tool.poetry.extras]
lint = ["pylint"]
test = ["pytest", "pytest-cov", "testfixtures", "responses", "freezegun", "pytest-testmon", "pytest-watch", "pytest-socket"]
doc = ["sphinx", "sphinx_rtd_theme", "sphobjinv"]

[tool.poetry.dev-dependencies]
ipython = "*"
# TODO: remove jedi when iPython is upgraded to 7.20.0.
#  poetry show ipython --tree
#  https://github.com/ipython/ipython/issues/12745#issuecomment-771180253
jedi = "<=0.17.2"
ipdb = "*"
icecream = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
