# Based on https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python

on: [push, pull_request]

jobs:
  build:
    name: "${{ matrix.python-version }} ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-latest is being moved from ubuntu-18.04 to ubuntu-20.04
        # See https://github.com/actions/virtual-environments/issues/1816
        os: [windows-latest] # FIXME:
        #        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7"] # FIXME: , "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    env:
      PYTHONUNBUFFERED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # https://github.com/ymyzk/tox-gh-actions
      # This action didn't work: https://github.com/marketplace/actions/run-tox-gh-actions ¯\_(ツ)_/¯
      # Error: Unable to resolve action `ymyzk/tox-gh-actions@main`, unable to find version `main`
      - name: Install tox
        run: python -m pip install tox

      - name: "Set lint/docs env var"
        if: matrix.python-version == '3.9'
        run: |
          echo "LINT_DOCS=,lint,docs" >> $GITHUB_ENV

      - name: "Run tests on ${{ matrix.os }}"
        run: |
          tox -e clean,$(echo py${{ matrix.python-version }} | tr -d .)${{env.LINT_DOCS}},report

      # https://github.com/marketplace/actions/coveralls-python
      # The official coverallsapp/github-action@master doesn't work: https://github.com/marketplace/actions/coveralls-github-action
      # It fails with "Error: Lcov file not found."
      # Solution here: https://github.com/coverallsapp/github-action/issues/30#issuecomment-612523058
      - name: Coveralls
        if: matrix.os == 'ubuntu-latest'
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true
          flag-name: Unit Test

  # https://github.com/marketplace/actions/coveralls-python
  coveralls_finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true

  # This cannot be a separate workflow yet, because a workflow cannot depend on another workflow. See this topic:
  # Depend on another workflow - Code to Cloud / GitHub Actions - GitHub Support Community
  # https://github.community/t/depend-on-another-workflow/16311
  release:
    needs: coveralls_finish
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsif
    # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#determining-when-to-use-contexts
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
      - name: Add to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install pip/setuptools first
        run: |
          python --version
          python3 --version
          python3 -m pip --version
          python3 -m pip install --upgrade pip setuptools
      - name: Install pre-commit bumpversion twine
        run: |
          python3 -m pip install --upgrade poetry pre-commit bumpversion twine
          pre-commit --version
          twine --version
          python3 -m pip freeze
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          # https://github.com/marketplace/actions/action-for-semantic-release#semantic_version
          # https://github.com/semantic-release/semantic-release/releases
          semantic_version: 18.0.1

          # To debug, see these options:
          # https://github.com/marketplace/actions/action-for-semantic-release#dry_run
          # https://github.com/marketplace/actions/action-for-semantic-release#branches

          # https://github.com/marketplace/actions/action-for-semantic-release#extra_plugins
          # https://github.com/semantic-release/changelog/releases
          # https://github.com/semantic-release/git/releases
          # https://github.com/semantic-release/exec/releases
          extra_plugins: |
            @semantic-release/changelog@6.0.1
            @semantic-release/git@10.0.1
            @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_TEST_PASSWORD: ${{ secrets.TWINE_TEST_PASSWORD }}
      - name: New release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}
          echo ${{ steps.semantic.outputs.new_release_channel }}
          echo ${{ steps.semantic.outputs.new_release_notes }}
